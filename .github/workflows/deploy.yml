name: Deploy-Workflow

on:
    push:
        tags: '*'
jobs:
    build:
        runs-on: ubuntu-latest

        services:
            db:
                image: mysql:5.7
                ports:
                    - 3306:3306
                env:
                    MYSQL_USER: user
                    MYSQL_PASSWORD: password
                    MYSQL_DATABASE: test
                    MYSQL_ROOT_PASSWORD: password
                options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

        steps:
            - uses: actions/checkout@v2
            - name: Exit if not on master branch
              if: endsWith(github.ref, 'master') == false
              run: exit -1
            - name: Set tag version env
              run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
            
            - name: Verify MySQL connection
              env:
                  PORT: ${{ job.services.db.ports[3306] }}
              run: |
                  while ! mysqladmin ping -h"127.0.0.1" -P"$PORT" --silent; do
                      sleep 1
                  done
            
            - uses: actions/setup-node@v1
              with:
                  node-version: 12
            - name: Run tests
              env:
                  DB_USERNAME: user
                  DB_PASSWORD: password
                  DB_DATABASE: test
              run: |
                  cd scripts
                  chmod +x run-test.sh
                  ./run-test.sh
            
            - name : Build & Push Docker Images
              env: 
                DOCKER_USER: ${{ secrets.DOCKER_USER }}
                DOCKER_PASSWORD: ${{ secrets.DOKCER_PASSWORD }}
              run: |
                  cd scripts
                  chmod +x build_push.sh
                  ./build_push.sh "$RELEASE_VERSION" "$DOCKER_USER" "$DOCKER_PASSWORD"
            
            - name: Deploy
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: ${{ secrets.SSH_PORT }}
                  script: |
                      ./deploy.sh
